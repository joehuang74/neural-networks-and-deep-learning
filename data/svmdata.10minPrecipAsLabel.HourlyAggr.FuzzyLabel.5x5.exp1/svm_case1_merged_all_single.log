===== Training file list =====
svm_traindata.txt.1a.KDP_0.5_0.5.HourlyAggr.fuzzy
svm_traindata.txt.1a.KDP_1.5_1.5.HourlyAggr.fuzzy
svm_traindata.txt.1a.KDP_2.4_2.4.HourlyAggr.fuzzy
svm_traindata.txt.1a.KDP_3.4_3.4.HourlyAggr.fuzzy
svm_traindata.txt.1a.KDP_4.3_4.3.HourlyAggr.fuzzy
svm_traindata.txt.1a.KDP_6.0_6.0.HourlyAggr.fuzzy
svm_traindata.txt.1a.ZDR_0.5_0.5.HourlyAggr.fuzzy
svm_traindata.txt.1a.ZDR_1.5_1.5.HourlyAggr.fuzzy
svm_traindata.txt.1a.ZDR_2.4_2.4.HourlyAggr.fuzzy
svm_traindata.txt.1a.ZDR_3.4_3.4.HourlyAggr.fuzzy
svm_traindata.txt.1a.ZDR_4.3_4.3.HourlyAggr.fuzzy
svm_traindata.txt.1a.ZDR_6.0_6.0.HourlyAggr.fuzzy
svm_traindata.txt.1a.Z_0.5_0.5.HourlyAggr.fuzzy
svm_traindata.txt.1a.Z_1.5_1.5.HourlyAggr.fuzzy
svm_traindata.txt.1a.Z_2.4_2.4.HourlyAggr.fuzzy
svm_traindata.txt.1a.Z_3.4_3.4.HourlyAggr.fuzzy
svm_traindata.txt.1a.Z_4.3_4.3.HourlyAggr.fuzzy
svm_traindata.txt.1a.Z_6.0_6.0.HourlyAggr.fuzzy
training_data_dir: D:\\svmdata.10minPrecipAsLabel.HourlyAggr.FuzzyLabel\svm_case1_merged_all_single
rainfall_min_value: 0
rainfall_max_value: 100
n_rainfall_indexes(Number of neurons for output-layer): 100
size_hidden_layer(Number of neurons for hidden-layer): 30
kernel type: Sigmoid
epoches: 20
mini_batch_size: 10
training_rate: 2.0

===== svm_traindata.txt.1a.KDP_0.5_0.5.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 0 / 36
Epoch 10: 0 / 36
Epoch 11: 0 / 36
Epoch 12: 0 / 36
Epoch 17: 25 / 36
Epoch 18: 24 / 36
Epoch 19: 27 / 36
Result after 20 epoches: 27 / 36  (75%)

===== svm_traindata.txt.1a.KDP_1.5_1.5.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 0 / 36
Epoch 10: 0 / 36
Epoch 11: 0 / 36
Epoch 12: 0 / 36
Epoch 17: 0 / 36
Epoch 18: 0 / 36
Epoch 19: 0 / 36
Result after 20 epoches: 0 / 36  (0%)

===== svm_traindata.txt.1a.KDP_2.4_2.4.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 12 / 36
Epoch 10: 26 / 36
Epoch 11: 11 / 36
Epoch 12: 25 / 36
Epoch 17: 26 / 36
Epoch 18: 27 / 36
Epoch 19: 18 / 36
Result after 20 epoches: 18 / 36  (50%)

===== svm_traindata.txt.1a.KDP_3.4_3.4.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 0 / 36
Epoch 10: 0 / 36
Epoch 11: 0 / 36
Epoch 12: 0 / 36
Epoch 17: 0 / 36
Epoch 18: 0 / 36
Epoch 19: 0 / 36
Result after 20 epoches: 0 / 36  (0%)

===== svm_traindata.txt.1a.KDP_4.3_4.3.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 0 / 36
Epoch 10: 0 / 36
Epoch 11: 0 / 36
Epoch 12: 0 / 36
Epoch 17: 0 / 36
Epoch 18: 0 / 36
Epoch 19: 0 / 36
Result after 20 epoches: 0 / 36  (0%)

===== svm_traindata.txt.1a.KDP_6.0_6.0.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 0 / 36
Epoch 10: 0 / 36
Epoch 11: 0 / 36
Epoch 12: 0 / 36
Epoch 17: 0 / 36
Epoch 18: 0 / 36
Epoch 19: 0 / 36
Result after 20 epoches: 0 / 36  (0%)

===== svm_traindata.txt.1a.ZDR_0.5_0.5.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 0 / 36
Epoch 10: 0 / 36
Epoch 11: 0 / 36
Epoch 12: 0 / 36
Epoch 17: 23 / 36
Epoch 18: 21 / 36
Epoch 19: 20 / 36
Result after 20 epoches: 20 / 36  (55%)

===== svm_traindata.txt.1a.ZDR_1.5_1.5.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 0 / 36
Epoch 10: 0 / 36
Epoch 11: 0 / 36
Epoch 12: 0 / 36
Epoch 17: 0 / 36
Epoch 18: 0 / 36
Epoch 19: 0 / 36
Result after 20 epoches: 0 / 36  (0%)

===== svm_traindata.txt.1a.ZDR_2.4_2.4.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 0 / 36
Epoch 2: 0 / 36
Epoch 9: 23 / 36
Epoch 10: 23 / 36
Epoch 11: 23 / 36
Epoch 12: 24 / 36
Epoch 17: 21 / 36
Epoch 18: 25 / 36
Epoch 19: 23 / 36
Result after 20 epoches: 23 / 36  (63%)

===== svm_traindata.txt.1a.ZDR_3.4_3.4.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 22 / 36
Epoch 1: 17 / 36
Epoch 2: 17 / 36
Epoch 9: 23 / 36
Epoch 10: 25 / 36
Epoch 11: 18 / 36
Epoch 12: 25 / 36
Epoch 17: 23 / 36
Epoch 18: 26 / 36
Epoch 19: 23 / 36
Result after 20 epoches: 23 / 36  (63%)

===== svm_traindata.txt.1a.ZDR_4.3_4.3.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 21 / 36
Epoch 2: 23 / 36
Epoch 9: 23 / 36
Epoch 10: 21 / 36
Epoch 11: 22 / 36
Epoch 12: 24 / 36
Epoch 17: 21 / 36
Epoch 18: 23 / 36
Epoch 19: 24 / 36
Result after 20 epoches: 24 / 36  (66%)

===== svm_traindata.txt.1a.ZDR_6.0_6.0.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 143  test examples: 36
Epoch 0: 0 / 36
Epoch 1: 22 / 36
Epoch 2: 20 / 36
Epoch 9: 21 / 36
Epoch 10: 23 / 36
Epoch 11: 20 / 36
Epoch 12: 21 / 36
Epoch 17: 19 / 36
Epoch 18: 22 / 36
Epoch 19: 21 / 36
Result after 20 epoches: 21 / 36  (58%)

===== svm_traindata.txt.1a.Z_0.5_0.5.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 268  test examples: 68
Epoch 0: 31 / 68
Epoch 1: 36 / 68
Epoch 2: 42 / 68
Epoch 9: 38 / 68
Epoch 10: 38 / 68
Epoch 11: 42 / 68
Epoch 12: 41 / 68
Epoch 17: 41 / 68
Epoch 18: 40 / 68
Epoch 19: 37 / 68
Result after 20 epoches: 37 / 68  (54%)

===== svm_traindata.txt.1a.Z_1.5_1.5.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 268  test examples: 68
Epoch 0: 0 / 68
Epoch 1: 4 / 68
Epoch 2: 36 / 68
Epoch 9: 41 / 68
Epoch 10: 34 / 68
Epoch 11: 35 / 68
Epoch 12: 34 / 68
Epoch 17: 36 / 68
Epoch 18: 35 / 68
Epoch 19: 39 / 68
Result after 20 epoches: 39 / 68  (57%)

===== svm_traindata.txt.1a.Z_2.4_2.4.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 268  test examples: 68
Epoch 0: 1 / 68
Epoch 1: 36 / 68
Epoch 2: 35 / 68
Epoch 9: 38 / 68
Epoch 10: 43 / 68
Epoch 11: 37 / 68
Epoch 12: 40 / 68
Epoch 17: 40 / 68
Epoch 18: 39 / 68
Epoch 19: 39 / 68
Result after 20 epoches: 39 / 68  (57%)

===== svm_traindata.txt.1a.Z_3.4_3.4.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 268  test examples: 68
Epoch 0: 0 / 68
Epoch 1: 31 / 68
Epoch 2: 38 / 68
Epoch 9: 39 / 68
Epoch 10: 40 / 68
Epoch 11: 37 / 68
Epoch 12: 38 / 68
Epoch 17: 36 / 68
Epoch 18: 40 / 68
Epoch 19: 38 / 68
Result after 20 epoches: 38 / 68  (55%)

===== svm_traindata.txt.1a.Z_4.3_4.3.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 268  test examples: 68
Epoch 0: 12 / 68
Epoch 1: 36 / 68
Epoch 2: 39 / 68
Epoch 9: 42 / 68
Epoch 10: 37 / 68
Epoch 11: 41 / 68
Epoch 12: 38 / 68
Epoch 17: 39 / 68
Epoch 18: 41 / 68
Epoch 19: 39 / 68
Result after 20 epoches: 39 / 68  (57%)

===== svm_traindata.txt.1a.Z_6.0_6.0.HourlyAggr.fuzzy =====
dimension(Number of neurons for input layer) : 25
number of training examples: 268  test examples: 68
Epoch 0: 37 / 68
Epoch 1: 43 / 68
Epoch 2: 42 / 68
Epoch 9: 40 / 68
Epoch 10: 39 / 68
Epoch 11: 44 / 68
Epoch 12: 40 / 68
Epoch 17: 41 / 68
Epoch 18: 44 / 68
Epoch 19: 42 / 68
Result after 20 epoches: 42 / 68  (61%)

