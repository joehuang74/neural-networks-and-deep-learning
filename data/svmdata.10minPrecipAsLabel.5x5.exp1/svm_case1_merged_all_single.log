===== Training file list =====
svm_traindata.txt.1a.KDP_0.5_0.5
svm_traindata.txt.1a.KDP_1.5_1.5
svm_traindata.txt.1a.KDP_2.4_2.4
svm_traindata.txt.1a.KDP_3.4_3.4
svm_traindata.txt.1a.KDP_4.3_4.3
svm_traindata.txt.1a.KDP_6.0_6.0
svm_traindata.txt.1a.ZDR_0.5_0.5
svm_traindata.txt.1a.ZDR_1.5_1.5
svm_traindata.txt.1a.ZDR_2.4_2.4
svm_traindata.txt.1a.ZDR_3.4_3.4
svm_traindata.txt.1a.ZDR_4.3_4.3
svm_traindata.txt.1a.ZDR_6.0_6.0
svm_traindata.txt.1a.Z_0.5_0.5
svm_traindata.txt.1a.Z_1.5_1.5
svm_traindata.txt.1a.Z_2.4_2.4
svm_traindata.txt.1a.Z_3.4_3.4
svm_traindata.txt.1a.Z_4.3_4.3
svm_traindata.txt.1a.Z_6.0_6.0
training_data_dir: D:\\svmdata.10minPrecipAsLabel\svm_case1_merged_all_single
rainfall_min_value: 0
rainfall_max_value: 100
n_rainfall_indexes(Number of neurons for output-layer): 100
size_hidden_layer(Number of neurons for hidden-layer): 30
kernel type: Sigmoid
epoches: 30
mini_batch_size: 10
training_rate: 2.0

===== svm_traindata.txt.1a.KDP_0.5_0.5 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1145  test examples: 287
Epoch 0: 34 / 287
Epoch 1: 42 / 287
Epoch 2: 110 / 287
Epoch 14: 108 / 287
Epoch 15: 110 / 287
Epoch 16: 109 / 287
Epoch 17: 109 / 287
Epoch 27: 65 / 287
Epoch 28: 112 / 287
Epoch 29: 108 / 287
Result after 30 epoches: 108 / 287  (37%)

===== svm_traindata.txt.1a.KDP_1.5_1.5 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1140  test examples: 286
Epoch 0: 0 / 286
Epoch 1: 0 / 286
Epoch 2: 0 / 286
Epoch 14: 0 / 286
Epoch 15: 0 / 286
Epoch 16: 0 / 286
Epoch 17: 0 / 286
Epoch 27: 105 / 286
Epoch 28: 92 / 286
Epoch 29: 110 / 286
Result after 30 epoches: 110 / 286  (38%)

===== svm_traindata.txt.1a.KDP_2.4_2.4 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1142  test examples: 286
Epoch 0: 94 / 286
Epoch 1: 91 / 286
Epoch 2: 103 / 286
Epoch 14: 33 / 286
Epoch 15: 90 / 286
Epoch 16: 104 / 286
Epoch 17: 109 / 286
Epoch 27: 104 / 286
Epoch 28: 41 / 286
Epoch 29: 40 / 286
Result after 30 epoches: 40 / 286  (13%)

===== svm_traindata.txt.1a.KDP_3.4_3.4 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1142  test examples: 286
Epoch 0: 0 / 286
Epoch 1: 0 / 286
Epoch 2: 0 / 286
Epoch 14: 0 / 286
Epoch 15: 99 / 286
Epoch 16: 100 / 286
Epoch 17: 110 / 286
Epoch 27: 31 / 286
Epoch 28: 90 / 286
Epoch 29: 111 / 286
Result after 30 epoches: 111 / 286  (38%)

===== svm_traindata.txt.1a.KDP_4.3_4.3 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1141  test examples: 286
Epoch 0: 31 / 286
Epoch 1: 109 / 286
Epoch 2: 31 / 286
Epoch 14: 109 / 286
Epoch 15: 31 / 286
Epoch 16: 108 / 286
Epoch 17: 31 / 286
Epoch 27: 109 / 286
Epoch 28: 31 / 286
Epoch 29: 108 / 286
Result after 30 epoches: 108 / 286  (37%)

===== svm_traindata.txt.1a.KDP_6.0_6.0 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1140  test examples: 286
Epoch 0: 109 / 286
Epoch 1: 110 / 286
Epoch 2: 110 / 286
Epoch 14: 84 / 286
Epoch 15: 98 / 286
Epoch 16: 80 / 286
Epoch 17: 111 / 286
Epoch 27: 39 / 286
Epoch 28: 109 / 286
Epoch 29: 110 / 286
Result after 30 epoches: 110 / 286  (38%)

===== svm_traindata.txt.1a.ZDR_0.5_0.5 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1145  test examples: 287
Epoch 0: 45 / 287
Epoch 1: 55 / 287
Epoch 2: 107 / 287
Epoch 14: 50 / 287
Epoch 15: 67 / 287
Epoch 16: 60 / 287
Epoch 17: 45 / 287
Epoch 27: 49 / 287
Epoch 28: 69 / 287
Epoch 29: 98 / 287
Result after 30 epoches: 98 / 287  (34%)

===== svm_traindata.txt.1a.ZDR_1.5_1.5 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1140  test examples: 286
Epoch 0: 85 / 286
Epoch 1: 68 / 286
Epoch 2: 109 / 286
Epoch 14: 107 / 286
Epoch 15: 82 / 286
Epoch 16: 89 / 286
Epoch 17: 107 / 286
Epoch 27: 81 / 286
Epoch 28: 72 / 286
Epoch 29: 64 / 286
Result after 30 epoches: 64 / 286  (22%)

===== svm_traindata.txt.1a.ZDR_2.4_2.4 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1142  test examples: 286
Epoch 0: 110 / 286
Epoch 1: 34 / 286
Epoch 2: 109 / 286
Epoch 14: 64 / 286
Epoch 15: 110 / 286
Epoch 16: 54 / 286
Epoch 17: 74 / 286
Epoch 27: 110 / 286
Epoch 28: 110 / 286
Epoch 29: 98 / 286
Result after 30 epoches: 98 / 286  (34%)

===== svm_traindata.txt.1a.ZDR_3.4_3.4 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1142  test examples: 286
Epoch 0: 31 / 286
Epoch 1: 48 / 286
Epoch 2: 109 / 286
Epoch 14: 108 / 286
Epoch 15: 75 / 286
Epoch 16: 51 / 286
Epoch 17: 49 / 286
Epoch 27: 41 / 286
Epoch 28: 100 / 286
Epoch 29: 107 / 286
Result after 30 epoches: 107 / 286  (37%)

===== svm_traindata.txt.1a.ZDR_4.3_4.3 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1141  test examples: 286
Epoch 0: 32 / 286
Epoch 1: 75 / 286
Epoch 2: 48 / 286
Epoch 14: 73 / 286
Epoch 15: 110 / 286
Epoch 16: 38 / 286
Epoch 17: 69 / 286
Epoch 27: 87 / 286
Epoch 28: 110 / 286
Epoch 29: 110 / 286
Result after 30 epoches: 110 / 286  (38%)

===== svm_traindata.txt.1a.ZDR_6.0_6.0 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 1140  test examples: 285
Epoch 0: 54 / 285
Epoch 1: 85 / 285
Epoch 2: 63 / 285
Epoch 14: 62 / 285
Epoch 15: 87 / 285
Epoch 16: 63 / 285
Epoch 17: 77 / 285
Epoch 27: 66 / 285
Epoch 28: 58 / 285
Epoch 29: 57 / 285
Result after 30 epoches: 57 / 285  (20%)

===== svm_traindata.txt.1a.Z_0.5_0.5 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 2200  test examples: 550
Epoch 0: 183 / 550
Epoch 1: 165 / 550
Epoch 2: 191 / 550
Epoch 14: 251 / 550
Epoch 15: 206 / 550
Epoch 16: 245 / 550
Epoch 17: 144 / 550
Epoch 27: 185 / 550
Epoch 28: 145 / 550
Epoch 29: 157 / 550
Result after 30 epoches: 157 / 550  (28%)

===== svm_traindata.txt.1a.Z_1.5_1.5 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 2196  test examples: 549
Epoch 0: 256 / 549
Epoch 1: 185 / 549
Epoch 2: 161 / 549
Epoch 14: 254 / 549
Epoch 15: 139 / 549
Epoch 16: 161 / 549
Epoch 17: 250 / 549
Epoch 27: 186 / 549
Epoch 28: 147 / 549
Epoch 29: 140 / 549
Result after 30 epoches: 140 / 549  (25%)

===== svm_traindata.txt.1a.Z_2.4_2.4 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 2194  test examples: 549
Epoch 0: 239 / 549
Epoch 1: 246 / 549
Epoch 2: 259 / 549
Epoch 14: 152 / 549
Epoch 15: 165 / 549
Epoch 16: 252 / 549
Epoch 17: 156 / 549
Epoch 27: 170 / 549
Epoch 28: 192 / 549
Epoch 29: 175 / 549
Result after 30 epoches: 175 / 549  (31%)

===== svm_traindata.txt.1a.Z_3.4_3.4 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 2194  test examples: 549
Epoch 0: 214 / 549
Epoch 1: 257 / 549
Epoch 2: 256 / 549
Epoch 14: 208 / 549
Epoch 15: 232 / 549
Epoch 16: 156 / 549
Epoch 17: 128 / 549
Epoch 27: 155 / 549
Epoch 28: 154 / 549
Epoch 29: 154 / 549
Result after 30 epoches: 154 / 549  (28%)

===== svm_traindata.txt.1a.Z_4.3_4.3 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 2193  test examples: 549
Epoch 0: 162 / 549
Epoch 1: 173 / 549
Epoch 2: 123 / 549
Epoch 14: 244 / 549
Epoch 15: 145 / 549
Epoch 16: 111 / 549
Epoch 17: 230 / 549
Epoch 27: 158 / 549
Epoch 28: 251 / 549
Epoch 29: 237 / 549
Result after 30 epoches: 237 / 549  (43%)

===== svm_traindata.txt.1a.Z_6.0_6.0 =====
dimension(Number of neurons for input layer) : 25
number of training examples: 2189  test examples: 548
Epoch 0: 196 / 548
Epoch 1: 167 / 548
Epoch 2: 189 / 548
Epoch 14: 168 / 548
Epoch 15: 181 / 548
Epoch 16: 189 / 548
Epoch 17: 245 / 548
Epoch 27: 156 / 548
Epoch 28: 166 / 548
Epoch 29: 128 / 548
Result after 30 epoches: 128 / 548  (23%)

